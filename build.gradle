buildscript {
    ext.kotlinVersion = '1.1.0'
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.0-M3"
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = "jeweledoor"
        gdxVersion = '1.9.6'
        roboVMVersion = '2.2.0'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.0'
        ktxVersion = '1.9.5-b1'
        spekVersion = '1.1.0-beta3'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://dl.bintray.com/jetbrains/spek" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "kotlin"

    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        compile "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    }
}

project(":core") {
    apply plugin: "kotlin"

    dependencies {
        compile project(":model")
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
        compile "com.github.czyzby:ktx-actors:$ktxVersion"
        compile "com.github.czyzby:ktx-assets:$ktxVersion"
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    }
}

project(":model") {
    apply plugin: "java"
    apply plugin: "kotlin"
    apply plugin: 'org.junit.platform.gradle.plugin'
    apply plugin: "jacoco"
    
    jacoco {
        reportsDir = file("$rootProject.buildDir/reports/jacoco")
    }

    jacocoTestReport {
        onlyIf = {
            true
        }
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
    }
    
    junitPlatform {
        filters {
            engines {
                include 'spek'
            }
        }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        testCompile "org.jetbrains.spek:spek-api:$spekVersion"
        testCompile 'org.amshove.kluent:kluent:1.14'
        testRuntime "org.jetbrains.spek:spek-junit-platform-engine:$spekVersion"
        testRuntime 'org.junit.platform:junit-platform-console:1.0.0-M3'
    }
}

tasks.eclipse.doLast {
    delete ".project"
}